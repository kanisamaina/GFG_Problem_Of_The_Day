
Complexity:

  Time-O(R*C)
  Space-O(R*C)
  
Code(C++):

class Solution {
public:
    int helpaterp(vector<vector<int>> hospital)
    {
        //code here
        queue<pair<int,int>> q;
        int r=hospital.size(),c=hospital[0].size();
        for(int i=0;i<hospital.size();i++)
        {
            for(int j=0;j<hospital[i].size();j++)
            {
                if(hospital[i][j]==2)
                {
                    q.push({i,j});
                }
            }
        }
        int time=0;
        while(!q.empty())
        {
            int k=q.size();
            
            while(k--)
            {
                int x=q.front().first;
                int y=q.front().second;
                q.pop();
                if(x-1>=0 && y>=0 && x-1<r && y<c && hospital[x-1][y]==1)
                {
                    q.push({x-1,y});
                    hospital[x-1][y]=2;
                }
                if(x+1>=0 && y>=0 && x+1<r && y<c && hospital[x+1][y]==1)
                {
                    q.push({x+1,y});
                    hospital[x+1][y]=2;
                }
                if(x>=0 && y-1>=0 && x<r && y-1<c && hospital[x][y-1]==1)
                {
                    q.push({x,y-1});
                    hospital[x][y-1]=2;
                }
                if(x>=0 && y+1>=0 && x<r && y+1<c && hospital[x][y+1]==1)
                {
                    q.push({x,y+1});
                    hospital[x][y+1]=2;
                }
            }
            time++;
        }
        
        for(int i=0;i<hospital.size();i++)
        {
            for(int j=0;j<hospital[i].size();j++)
            {
                if(hospital[i][j]==1)
                {
                    return -1;
                }
            }
        }
        return time-1;
    }
};
