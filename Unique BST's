
Complexity:

    Time-O(n^2)
    Space-O(n)

Code(C++):

class Solution
{
    public:
    //Function to return the total number of possible unique BST. 
    int numTrees(int N) 
    {
        // Your code here
        
        vector<long long> dp(N+1,0);
        dp[0]=dp[1]=1;
        
        for(int i=2;i<=N;i++)
        {
            for(int j=0;j<i;j++)
                dp[i]=(dp[i]+(dp[j]*dp[i-j-1]))%1000000007;
        }
        return (int)dp[N];
    }
};
