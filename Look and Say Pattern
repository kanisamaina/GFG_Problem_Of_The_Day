
Complexity:

    Time-O(2^n)
    Space-O(2^(n-1))

Code(C++):

class Solution
{
    public:
    string lookandsay(int n) {
        // code here
        
        if(n==1)
            return "1";
        if(n==2)
            return "11";
            
        string s="11";
        for(int i=3;i<=n;i++)
        {
            s+='$';
            int len=s.length(),cnt=1;
            string res="";
            
            for(int j=1;j<len;j++)
            {
                if(s[j-1]!=s[j])
                {
                    res+=cnt+'0';
                    res+=s[j-1];
                    cnt=1;
                }
                else
                {
                    cnt++;
                }
            }
            
            s=res;
        }
        return s;
    }   
};
