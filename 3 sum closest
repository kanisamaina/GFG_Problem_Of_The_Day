
Complexity:

    Time-O(n^2)
    Space-O(1)


Code(C++):

class Solution{
    public:
    int closest3Sum(int A[], int N, int X)
    {
        // code here
        
        int ans=0,sum=INT_MAX;
        sort(A,A+N);
        for(int i=0;i+2<N;i++)
        {
            int j=i+1,k=N-1;
            while(j<k)
            {
                int curr=A[i]+A[j]+A[k];
                if(curr==X)
                    return X;
                else if(curr<X)
                {
                    if(abs(curr-X)<sum)
                    {
                        ans=curr;
                        sum=abs(curr-X);
                    }
                    else if(abs(curr-X)==sum)
                        sum=max(sum,abs(curr-X));
                    j++;
                }
                else
                {
                    if(abs(curr-X)<sum)
                    {
                        ans=curr;
                        sum=abs(curr-X);
                    }
                    else if(abs(curr-X)==sum)
                        sum=max(sum,abs(curr-X));
                    k--;
                }
            }
        }
        return ans;
    }
};
